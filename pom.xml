<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ojas.gcp</groupId>
	<artifactId>first-appengine-tryout</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>first-appengine-tryout</name>
	<description>Demo project for Spring Boot On Standard App engine</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- OAuth2 AutoConfig -->
		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
			<version>2.1.8.RELEASE</version>
		</dependency>

		<!-- JWT library -->
<!--		<dependency>-->
<!--			<groupId>io.jsonwebtoken</groupId>-->
<!--			<artifactId>jjwt</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.4.1</version>
		</dependency>

		<!-- Mail dependency-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- Thyme Leaf -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-dependencies</artifactId>
			<version>1.2.3.RELEASE</version>
			<type>pom</type>
<!--			<scope>import</scope>-->
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter-sql-mysql</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>

		<!-- logs liquibase -->
		<dependency>
			<groupId>com.mattbertolini</groupId>
			<artifactId>liquibase-slf4j</artifactId>
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>com.google.cloud.tools</groupId>-->
<!--				<artifactId>appengine-maven-plugin</artifactId>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>com.github.eirslett</groupId>-->
<!--				<artifactId>frontend-maven-plugin</artifactId>-->
<!--				<version>1.8.0</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>Install Node and npm ...</id>-->
<!--						<goals>-->
<!--							<goal>install-node-and-npm</goal>-->
<!--						</goals>-->
<!--						<phase>generate-resources</phase>-->
<!--						<configuration>-->
<!--							<nodeVersion>v12.6.0</nodeVersion>-->
<!--							<npmVersion>6.9.0</npmVersion>-->
<!--						</configuration>-->
<!--					</execution>-->

<!--					<execution>-->
<!--						<id>npm install all the dependencies</id>-->
<!--						<goals>-->
<!--							<goal>npm</goal>-->
<!--						</goals>-->
<!--						<phase>generate-resources</phase>-->
<!--						<configuration>-->
<!--							<arguments>install</arguments>-->
<!--						</configuration>-->
<!--					</execution>-->

<!--					<execution>-->
<!--						<id>npm build our react application</id>-->
<!--						<goals>-->
<!--							<goal>npm</goal>-->
<!--						</goals>-->
<!--						<phase>generate-resources</phase>-->
<!--						<configuration>-->
<!--                            <arguments>run build</arguments>-->
<!--                        </configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--				<configuration>-->
<!--					<workingDirectory>src/main/frontend</workingDirectory>-->
<!--				</configuration>-->
<!--			</plugin>-->

<!--			copy frontend build files to static folder to be packaged into jar-->
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-resources-plugin</artifactId>-->
<!--				<executions>-->
<!--					<execution>-->
<!--	    				<id>Copy frontend build to static folder of spring application's target folder</id>-->
<!--						<phase>process-resources</phase>-->
<!--						<goals>-->
<!--							<goal>copy-resources</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<outputDirectory>target/classes/static</outputDirectory>-->
<!--							<resources>-->
<!--								<resource>-->
<!--									<directory>src/main/frontend/build</directory>-->
<!--									<filtering>true</filtering>-->
<!--								</resource>-->
<!--							</resources>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>
</project>